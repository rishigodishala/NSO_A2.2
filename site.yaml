Ã¸- hosts: webservers
  become: true
  gather_facts: true
  tasks:
    - name: Install required packages
      apt:
        update_cache: true
        name:
          - python3
          - python3-pip
          - gunicorn
          - flask
        state: latest

    - name: Create Flask app directory
      file:
        path: /home/ubuntu/flask-app
        state: directory
        owner: ubuntu
        mode: '0755'

    - name: Copy Flask app
      copy:
        src: application2.py
        dest: /home/ubuntu/flask-app/app.py
        owner: ubuntu
        mode: '0755'

    - name: Create systemd service for Gunicorn
      copy:
        dest: /etc/systemd/system/flaskapp.service
        content: |
          [Unit]
          Description=Gunicorn instance to serve Flask app
          After=network.target

          [Service]
          User=ubuntu
          WorkingDirectory=/home/ubuntu/flask-app
          ExecStart=/usr/bin/gunicorn -w 2 -b 0.0.0.0:5000 app:app
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Enable and start Gunicorn service
      systemd:
        name: flaskapp.service
        enabled: yes
        state: restarted

- hosts: HAproxy
  become: true
  gather_facts: true
  tasks:
    - name: Get IP addresses of webservers
      set_fact:
        webservers_ips: "{{ groups['webservers'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | list }}"
      run_once: true

    - name: Configure HAProxy using template
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
      vars:
        webservers_ips: "{{ webservers_ips }}"

    - name: Restart HAProxy
      service:
        name: haproxy
        state: restarted

    - name: Wait for HAProxy to start
      wait_for:
        port: 80
        delay: 10
        timeout: 60

