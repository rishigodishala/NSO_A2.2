- hosts: all
  gather_facts: yes

- hosts: webservers
  become: true
  become_method: sudo
  tasks:
    - name: Update apt package cache on all webservers
      apt:
        update_cache: yes

    - name: Install Python 3 environment packages
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
        state: present

    - name: Install Flask framework using pip3
      pip:
        name: flask
        executable: pip3
        state: present

    - name: Install Gunicorn HTTP server
      apt:
        name: gunicorn
        state: present

    - name: Transfer Flask app script to target location
      copy:
        src: application2.py
        dest: /home/ubuntu/application2.py
        owner: ubuntu
        mode: '0755'

    - name: Start Flask app with Gunicorn on port 80 as daemon with 2 workers
      shell: >
        gunicorn -w 2 -D -b 0.0.0.0:80 application2:app
      args:
        chdir: /home/ubuntu

    - name: Install SNMP daemon package
      apt:
        name: snmpd
        state: latest

    - name: Apply SNMP daemon configuration from template
      template:
        src: snmpd.conf.j2
        dest: /etc/snmp/snmpd.conf
        mode: '0644'

    - name: Restart and enable SNMP service
      service:
        name: snmpd
        state: restarted
        enabled: true

- hosts: HAproxy
  become: true
  become_method: sudo
  tasks:
    - name: Update apt package cache on HAproxy server
      apt:
        update_cache: yes

    - name: Install HAProxy package
      apt:
        name: haproxy
        state: latest

    - name: Configure HAProxy using template
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        mode: '0644'

    - name: Install supplementary packages: Nginx, SNMP, and MIB downloader
      apt:
        name:
          - nginx
          - snmp
          - snmp-mibs-downloader
        state: latest

    - name: Deploy Nginx configuration file
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: '0644'

    - name: Restart Nginx to apply new settings
      service:
        name: nginx
        state: restarted
        enabled: true

    - name: Restart HAProxy to apply new settings
      service:
        name: haproxy
        state: restarted
        enabled: true

- hosts: HAproxy
  become: true
  become_method: sudo
  vars:
    backend_servers:
      - { hostname: devA, ip_address: "{{ hostvars['devA']['ansible_default_ipv4']['address'] }}" }
      - { hostname: devB, ip_address: "{{ hostvars['devB']['ansible_default_ipv4']['address'] }}" }
      - { hostname: devC, ip_address: "{{ hostvars['devC']['ansible_default_ipv4']['address'] }}" }
  tasks:
    - name: Ensure backend server entries exist in /etc/hosts
      lineinfile:
        path: /etc/hosts
        regexp: "^{{ item.ip_address }}\\s+{{ item.hostname }}$"
        line: "{{ item.ip_address }} {{ item.hostname }}"
        state: present
      loop: "{{ backend_servers }}"

