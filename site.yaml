- hosts: all
  gather_facts: yes

- hosts: webservers
  become: yes
  become_method: sudo
  tasks:
    - name: Update apt cache on webservers
      apt:
        update_cache: yes

    - name: Install Python3, pip, and venv packages
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
        state: present

    - name: Install Flask using pip3
      pip:
        executable: pip3
        name: flask
        state: present

    - name: Install Gunicorn package
      apt:
        name: gunicorn
        state: present

    - name: Copy Flask app to /home/ubuntu
      copy:
        src: application2.py
        dest: /home/ubuntu/application2.py
        owner: ubuntu
        mode: '0755'

    - name: Start Flask app with Gunicorn (2 workers, port 80)
      shell: gunicorn -w 2 -D -b 0.0.0.0:80 application2:app
      args:
        chdir: /home/ubuntu

    - name: Install SNMP daemon
      apt:
        name: snmpd
        state: latest

    - name: Deploy SNMP configuration template
      template:
        src: snmpd.conf.j2
        dest: /etc/snmp/snmpd.conf
        mode: '0644'

    - name: Restart and enable SNMP service
      service:
        name: snmpd
        state: restarted
        enabled: yes

- hosts: HAproxy
  become: yes
  become_method: sudo
  tasks:
    - name: Update apt cache on HAproxy host
      apt:
        update_cache: yes

    - name: Install HAProxy
      apt:
        name: haproxy
        state: latest

    - name: Deploy HAProxy configuration template
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        mode: '0644'

    - name: Install Nginx, SNMP, and MIB downloader
      apt:
        name:
          - nginx
          - snmp
          - snmp-mibs-downloader
        state: latest

    - name: Deploy Nginx configuration template
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: '0644'

    - name: Restart and enable Nginx service
      service:
        name: nginx
        state: restarted
        enabled: yes

    - name: Restart and enable HAProxy service
      service:
        name: haproxy
        state: restarted
        enabled: yes

- hosts: HAproxy
  become: yes
  become_method: sudo
  vars:
    backend_hosts:
      - { name: devA, ip: "{{ hostvars['devA']['ansible_default_ipv4']['address'] }}" }
      - { name: devB, ip: "{{ hostvars['devB']['ansible_default_ipv4']['address'] }}" }
      - { name: devC, ip: "{{ hostvars['devC']['ansible_default_ipv4']['address'] }}" }
  tasks:
    - name: Add backend hosts to /etc/hosts file
      lineinfile:
        path: /etc/hosts
        regexp: "^{{ item.ip }}\\s+{{ item.name }}$"
        line: "{{ item.ip }} {{ item.name }}"
        state: present
      loop: "{{ backend_hosts }}"

