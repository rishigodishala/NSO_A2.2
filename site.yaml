- name: Install and configure Flask app on dev servers
  hosts: webservers
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - python3
          - python3-pip
          - gunicorn
          - snmpd
        state: present

    - name: Install Flask via pip
      pip:
        name: flask
        executable: pip3

    - name: Copy Flask application
      copy:
        src: application2.py
        dest: /home/ubuntu/application2.py
        owner: ubuntu
        mode: '0644'

    - name: Start Flask app using Gunicorn
      shell: |
        pkill gunicorn || true
        nohup gunicorn -w 2 -b 0.0.0.0:80 application2:app &
      args:
        chdir: /home/ubuntu
        executable: /bin/bash

    - name: Enable and start snmpd
      systemd:
        name: snmpd
        enabled: yes
        state: started

- name: Setup HAProxy and Nginx load balancing
  hosts: HAproxy
  become: true
  vars:
    udp_backends: "{{ groups['webservers'] }}"
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install HAProxy and Nginx
      apt:
        name:
          - haproxy
          - nginx
        state: present

    - name: Configure HAProxy (HTTP load balancing)
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        validate: haproxy -c -f %s
      notify: Restart HAProxy

    - name: Add Nginx UDP load balancing for SNMP
      blockinfile:
        path: /etc/nginx/nginx.conf
        insertafter: "include /etc/nginx/modules-enabled/\\*.conf;"
        block: |
          stream {
              upstream snmp_servers {
              {% for host in udp_backends %}
                  server {{ hostvars[host]['ansible_host'] | default(host) }}:161;
              {% endfor %}
              }

              server {
                  listen 1611 udp;
                  proxy_pass snmp_servers;
              }
          }

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
        enabled: yes

  handlers:
    - name: Restart HAProxy
      service:
        name: haproxy
        state: restarted
        enabled: yes


